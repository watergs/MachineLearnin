dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),dataset$age)
getwd()
setwd('C:/Users/kthakkar/Desktop/Machine_Learning_AZ_Template_Folder/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Data_Preprocessing/Data_Preprocessing')
dataset=read.csv('Data.csv')
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),dataset$age)
?ave
?na.rm
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = mean(x, na.rm = TRUE)),dataset$age)
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = mean(dataset$age, na.rm = TRUE)),dataset$age)
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN =  mean(na.rm = TRUE)),dataset$age)
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(dataset$age, na.rm = TRUE)),dataset$age)
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),dataset$age)
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),dataset$age)
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary, FUN = function(x)mean(x, na.rm = TRUE)),dataset$Salary)
View(dataset)
dataset$Country=factor(dataset$Country, levels = c("France","Spain","Germany"), labels = c(1,2,3))
View(dataset)
dataset$Country
dataset$Purchased=factor(dataset$Purchased, levels = c("Yes","No"), labels = c(1,0))
View(dataset)
install.packages('caTools')
library("caTools", lib.loc="~/R/win-library/3.5")
#install.packages('caTools')
?set.seed
?sample.split
trainingSet=subset(dataset,split=TRUE)
testSet=subset(dataset,split=FALSE)
trainingSet=subset(dataset,split==TRUE)
split=sample.split(dataset$Purchased, SplitRatio = 0.8)
trainingSet=subset(dataset,split==TRUE)
testSet=subset(dataset,split==FALSE)
View(testSet)
View(trainingSet)
#feature scaling
trainingSet= scale(trainingSet)
#feature scaling
trainingSet= scale(trainingSet)
View(trainingSet)
View(testSet)
View(dataset)
View(dataset)
View(dataset)
#feature scaling
trainingSet[,2:3]= scale(trainingSet[,2:3])
testSet[,2:3]=scale(testSet[,2:3])
